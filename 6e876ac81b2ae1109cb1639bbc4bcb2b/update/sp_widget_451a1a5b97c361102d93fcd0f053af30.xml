<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[// Server-side code in ServiceNow widget server script

(function() {
  var request = new sn_ws.RESTMessageV2();
  var clientID = 'AX_ynW9-5JjV6MttaFgC8j4HSU40joSjuG-Gu8XmvTFP5HVJNZBgq7QPA3nnxejEYsqA3V_a2L9VP5iv';
  var appSecret = 'EKMcs15MNfGw8OIkCragRFFbw9di_ZISYzVfmxw2eVFYioTF4cBIdzR1EWij5Zf42WoRPKigPeidLaqN';
  var baseURL = 'https://api.postman.com/collections/10724652-206d763e-40ca-49c9-b60f-e7a48a26de20?access_key=PMAT-01H1TZA584ZZ33Y4AGM7RSSB00'; // or 'https://api-m.paypal.com' for production

  // Create a new order
  var createOrder = function() {
    var accessToken = generateAccessToken();
    var url = baseURL + '/v2/checkout/orders';
    var payload = {
      intent: 'CAPTURE',
      purchase_units: [
        {
          amount: {
            currency_code: 'USD',
            value: '100.00'
          }
        }
      ]
    };
    var headers = {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + accessToken
    };
    request.setEndpoint(url);
    request.setHttpMethod('POST');
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestHeader('Authorization', 'Bearer ' + accessToken);
    request.setRequestBody(JSON.stringify(payload));
    var response = request.execute();
    var responseBody = response.getBody();
    var data = JSON.parse(responseBody);
    return data;
  };

  // Capture payment for an order
  var capturePayment = function(orderId) {
    var accessToken = generateAccessToken();
    var url = baseURL + '/v2/checkout/orders/' + orderId + '/capture';
    var headers = {
      'Content-Type': 'application/json',
      'Authorization': 'Bearer ' + accessToken
    };
    request.setEndpoint(url);
    request.setHttpMethod('POST');
    request.setRequestHeader('Content-Type', 'application/json');
    request.setRequestHeader('Authorization', 'Bearer ' + accessToken);
    var response = request.execute();
    var responseBody = response.getBody();
    var data = JSON.parse(responseBody);
    return data;
  };

  // Generate an access token using client ID and app secret
  var generateAccessToken = function() {
    var auth = new GlideEncrypter().base64Encode(clientID + ':' + appSecret);
    var url = baseURL + '/v1/oauth2/token';
    var headers = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Authorization': 'Basic ' + auth
    };
    request.setEndpoint(url);
    request.setHttpMethod('POST');
    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    request.setRequestHeader('Authorization', 'Basic ' + auth);
    request.setRequestBody('grant_type=client_credentials');
    var response = request.execute();
    var responseBody = response.getBody();
    var data = JSON.parse(responseBody);
    return data.access_token;
  };

  // API endpoint for creating a PayPal order
  data.createPaypalOrder = function() {
    var order = createOrder();
    return order;
  };

  // API endpoint for capturing a PayPal order
  data.capturePaypalOrder = function(orderID) {
    var captureData = capturePayment(orderID);
    // TODO: Store payment information such as the transaction ID
    return captureData;
  };
})();
]]></client_script>
        <controller_as>c</controller_as>
        <css>.home-container1 {
  width: 100%;
  height: 97px;
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
}
.home-text {
  color: rgb(15, 165, 83);
  font-style: normal ;
  text-align: center;
  font-weight: 700;
  text-transform: uppercase;
}
@media(max-width: 767px) {
  .home-text {
    font-size: 40px;
  }
}

.h1{
color: black;
text-align: center;
 }
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>sample</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script/>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>CC-Supradhar</sys_created_by>
        <sys_created_on>2023-06-01 04:48:06</sys_created_on>
        <sys_id>451a1a5b97c361102d93fcd0f053af30</sys_id>
        <sys_mod_count>73</sys_mod_count>
        <sys_name>sample</sys_name>
        <sys_package display_value="AuctionArc" source="x_1046400_auction">6e876ac81b2ae1109cb1639bbc4bcb2b</sys_package>
        <sys_policy/>
        <sys_scope display_value="AuctionArc">6e876ac81b2ae1109cb1639bbc4bcb2b</sys_scope>
        <sys_update_name>sp_widget_451a1a5b97c361102d93fcd0f053af30</sys_update_name>
        <sys_updated_by>CC-Harsha</sys_updated_by>
        <sys_updated_on>2023-06-08 04:41:30</sys_updated_on>
        <template><![CDATA[
    <div class="home-container1">
      <h1 class="home-text">
        <br />
        <span>█▓▒▒░░░AUCTIONARC░░░▒▒▓█</span>
        <br />
      </h1>
    </div>


<div class="h1">
  
  TOP SOLD ITEMS
  
</div>]]></template>
    </sp_widget>
</record_update>
